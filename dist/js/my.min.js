var o="object"==typeof o?o:{};(o={init:function(){mapboxgl.accessToken="pk.eyJ1IjoidGhhdGJyYW0iLCJhIjoiY2p0YzM1NW9zMHM5MTN5cDRsdnJoOGw3byJ9.A7umZVt9Sx7Nb8jfN6M03g";let e=$.urlParam("mydocid");if(console.log("mydoc_id_queryStr_val: "+e),!1===e){o.loadMap().on("load",function(){$("#mydoc_map_status").hide(),$("#mydoc_map .alert").is(":visible")&&$("#mydoc_map .alert").removeAttr("style")})}else $("#mydoc_id_search_field").val(e),$("#mydoc_id_search_go").prop("disabled",!0),o.findMyDoC("url");$("#mydoc_id_search_field").on("input",function(){let e=$(this).val();(e=$.trim(e)).length>4?($("#mydoc_id_search_go").prop("disabled",!1),$("#mydoc_id_search_field").off("keypress"),$("#mydoc_id_search_field").keypress(function(e){13===e.which&&o.findMyDoC("user")})):($("#mydoc_id_search_go").prop("disabled",!0),$("#mydoc_id_search_field").off("keypress"))}),$("#mydoc_id_search_go").click(function(){o.findMyDoC("user")})},loadMap:function(o){$("#mydoc_map_status").show();var e=[-105.547222,39],t=6.5;return void 0!==o&&(void 0!==o.center&&(e=o.center),void 0!==o.zoom&&(t=o.zoom)),new mapboxgl.Map({container:"mydoc_map",style:"mapbox://styles/thatbram/cjtokh26902ad1fm43xqm4kv2",center:e,zoom:t})},findMyDoC:function(e){let t;switch($("#mydoc_map .alert").alert("close"),e){case"user":console.log("source: user"),-1!==location.href.indexOf("?")&&history.pushState("",document.title,window.location.pathname),t=$("#mydoc_id_search_field").val(),t=$.trim(t);break;case"url":console.log("source: url");let o=$.urlParam("mydocid");t=o}t=t.toLowerCase(),$.ajax({url:"/.netlify/functions/mydoc_at?mydocid="+t,dataType:"json"}).done(function(e){if(console.log("resp: "),console.log(e),e.length>0){let r=t;var a=e[0].fields;if(console.log(a),history.pushState("",document.title,"?mydocid="+r),a.videos){var i=a.videos;i=i.split(","),$.each(i,function(o,e){let t=e.substr(0,e.indexOf(":"));var a,i=e.substr(e.indexOf(":")+1,e.length);switch(t){case"vimeo":a='<iframe src="https://player.vimeo.com/video/'+i+'" class="video" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>'}$("#mydoc_details_videos_container").append(a)})}else $("#mydoc_details_videos_container").html("");if(a.photos){var s=a.photos;s=s.split(","),$("#mydoc_details_photos_carousel").css("visibility","visible")}else $("#mydoc_details_photos_carousel").css("visibility","hidden");if(a.collection_date)a.collection_date;if(a.latitude)var l=a.latitude;if(a.longitude)var d=a.longitude;if(!a.latitude||!a.longitude)return void c("missingCoors");let n=[d,l],m={center:n,zoom:15},p=o.loadMap(m);p.on("load",function(){$("#mydoc_map_status").hide(),$("#mydoc_map .alert").is(":visible")&&$("#mydoc_map .alert").removeAttr("style");(new mapboxgl.Marker).setLngLat(n).addTo(p);var o={top:[0,0],"top-left":[0,0],"top-right":[0,0],bottom:[0,-38],"bottom-left":[10,-40],"bottom-right":[-10,-40],left:[8,-30],right:[-8,-30]};mydoc_map_popup_template='<span class="mydoc_id">'+r+"</span><br>"+(l+", "+d),mydoc_map_popup=new mapboxgl.Popup({offset:o,className:"mydoc-map-popup"}).setLngLat([d,l]).setHTML(mydoc_map_popup_template).addTo(p)})}else c("invalidMydoc");function c(e){var t;switch(e){case"invalidMydoc":t="<strong>DoC id not found.</strong> Please try again.";break;case"missingCoors":t="<strong>Can't map this Dose ID.</strong> Seems to be from lack of coordinates. Sorry about that... =/";break;default:t="<strong>Can't map this Dose ID.</strong> Looks like that's all the info there is. Sorry about that... =/"}if(o.loadMap().on("load",function(){console.log("findMyDoC mydoc_map.on(load) - invalid id"),$("#mydoc_map_status").hide(),$("#mydoc_map .alert").is(":visible")&&$("#mydoc_map .alert").removeAttr("style")}),$("#mydoc_map").append('<div class="alert alert-danger alert-dismissible fade show" role="alert">'+t+'<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>'),console.log("$(#mydoc_map_status).is(:visible): "+$("#mydoc_map_status").is(":visible")),$("#mydoc_map_status").is(":visible")){let o=$("#mydoc_map_status").outerHeight();$("#mydoc_map .alert:first").css("margin-top",o+16+"px")}}})}}).init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm15LmpzIl0sIm5hbWVzIjpbIm15ZG9jIiwiaW5pdCIsIm1hcGJveGdsIiwiYWNjZXNzVG9rZW4iLCJteWRvY19pZF9xdWVyeVN0cl92YWwiLCIkIiwidXJsUGFyYW0iLCJjb25zb2xlIiwibG9nIiwibG9hZE1hcCIsIm9uIiwiaGlkZSIsImlzIiwicmVtb3ZlQXR0ciIsInZhbCIsInByb3AiLCJmaW5kTXlEb0MiLCJteWRvY19pZF9zZWFyY2hfdmFsIiwidGhpcyIsInRyaW0iLCJsZW5ndGgiLCJvZmYiLCJrZXlwcmVzcyIsImUiLCJ3aGljaCIsImNsaWNrIiwic2V0dGluZ3MiLCJzaG93IiwiY2VudGVyIiwiem9vbSIsIk1hcCIsImNvbnRhaW5lciIsInN0eWxlIiwic291cmNlIiwiYWxlcnQiLCJsb2NhdGlvbiIsImhyZWYiLCJpbmRleE9mIiwiaGlzdG9yeSIsInB1c2hTdGF0ZSIsImRvY3VtZW50IiwidGl0bGUiLCJ3aW5kb3ciLCJwYXRobmFtZSIsInRvTG93ZXJDYXNlIiwiYWpheCIsInVybCIsImRhdGFUeXBlIiwiZG9uZSIsInJlc3AiLCJteWRvY19pZCIsIm15ZG9jX2RhdGEiLCJmaWVsZHMiLCJ2aWRlb3MiLCJ2aWRlb3NBcnIiLCJzcGxpdCIsImVhY2giLCJpZHgiLCJpdG0iLCJ2aWRTdmMiLCJzdWJzdHIiLCJ2aWRPYmoiLCJ2aWRJZCIsImFwcGVuZCIsImh0bWwiLCJwaG90b3MiLCJwaG90b3NBcnIiLCJjc3MiLCJjb2xsZWN0aW9uX2RhdGUiLCJsYXRpdHVkZSIsIm15ZG9jX2xhdCIsImxvbmdpdHVkZSIsIm15ZG9jX2xvbmciLCJtYXBwaW5nRXJyIiwibXlkb2NfbG9jX21iIiwibXlkb2NfbWFwIiwiTWFya2VyIiwic2V0TG5nTGF0IiwiYWRkVG8iLCJwb3B1cE9mZnNldHMiLCJ0b3AiLCJ0b3AtbGVmdCIsInRvcC1yaWdodCIsImJvdHRvbSIsImJvdHRvbS1sZWZ0IiwiYm90dG9tLXJpZ2h0IiwibGVmdCIsInJpZ2h0IiwibXlkb2NfbWFwX3BvcHVwX3RlbXBsYXRlIiwibXlkb2NfbWFwX3BvcHVwIiwiUG9wdXAiLCJvZmZzZXQiLCJjbGFzc05hbWUiLCJzZXRIVE1MIiwiY29uZGl0aW9uIiwiZXJyTXNnIiwibWFwU3RhdHVzX2giLCJvdXRlckhlaWdodCJdLCJtYXBwaW5ncyI6IkFBQ0EsSUFBSUEsRUFBNkIsaUJBQVosRUFBeUJBLEVBQVEsSUFDckRBLEVBQVEsQ0FDUkMsS0FBTyxXQUNOQyxTQUFTQyxZQUFjLDZGQUN2QixJQUFJQyxFQUF3QkMsRUFBRUMsU0FBUyxXQUl2QyxHQUZBQyxRQUFRQyxJQUFJLDBCQUE0QkosSUFFVCxJQUExQkEsRUFBa0MsQ0FDdEJKLEVBQU1TLFVBRVpDLEdBQUcsT0FBUSxXQUNwQkwsRUFBRSxxQkFBcUJNLE9BRWxCTixFQUFFLHFCQUFxQk8sR0FBRyxhQUM5QlAsRUFBRSxxQkFBcUJRLFdBQVcsZ0JBSXBDUixFQUFFLDBCQUEwQlMsSUFBSVYsR0FFaENDLEVBQUUsdUJBQXVCVSxLQUFLLFlBQVksR0FFMUNmLEVBQU1nQixVQUFVLE9BR2pCWCxFQUFFLDBCQUEwQkssR0FBRyxRQUFTLFdBQ3ZDLElBQUlPLEVBQXNCWixFQUFFYSxNQUFNSixPQUNqQ0csRUFBc0JaLEVBQUVjLEtBQUtGLElBRU5HLE9BQVMsR0FDaENmLEVBQUUsdUJBQXVCVSxLQUFLLFlBQVksR0FDMUNWLEVBQUUsMEJBQTBCZ0IsSUFBSSxZQUNoQ2hCLEVBQUUsMEJBQTBCaUIsU0FBVSxTQUFVQyxHQUMvQixLQUFaQSxFQUFFQyxPQUNMeEIsRUFBTWdCLFVBQVUsWUFJbEJYLEVBQUUsdUJBQXVCVSxLQUFLLFlBQVksR0FDMUNWLEVBQUUsMEJBQTBCZ0IsSUFBSSxlQUlsQ2hCLEVBQUUsdUJBQXVCb0IsTUFBTyxXQUMvQnpCLEVBQU1nQixVQUFVLFdBSWxCUCxRQUFVLFNBQVVpQixHQUNuQnJCLEVBQUUscUJBQXFCc0IsT0FFdkIsSUFBSUMsRUFBUyxFQUFFLFdBQVksSUFDdkJDLEVBQU8sSUFxQlgsWUFuQndCLElBQWJILFNBRXFC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QyxFQUFXLGVBRjlDb0IsRUFBWSxLQUFPRSxHQVN2Q2lCLGdCQUFrQixJQUFJdkYsU0FBU3dGLE1BQU0sQ0FBQ0MsT0FBUVosRUFBY2EsVUFBVyxvQkFDckVmLFVBQVUsQ0FBQ0wsRUFBWUYsSUFDdkJ1QixRQUFRTCwwQkFDUlYsTUFBTUgsVUFHVEYsRUFBVyxnQkFHWixTQUFTQSxFQUFZcUIsR0FDcEIsSUFBSUMsRUFFSixPQUFRRCxHQUNQLElBQUssZUFDSkMsRUFBUyx1REFDVixNQUNBLElBQUssZUFDSkEsRUFBUyx3R0FDVixNQUNBLFFBQ0NBLEVBQVMsMkdBb0JYLEdBakJnQi9GLEVBQU1TLFVBRVpDLEdBQUcsT0FBUSxXQUVwQkgsUUFBUUMsSUFBSSw2Q0FFWkgsRUFBRSxxQkFBcUJNLE9BRWxCTixFQUFFLHFCQUFxQk8sR0FBRyxhQUM5QlAsRUFBRSxxQkFBcUJRLFdBQVcsV0FJcENSLEVBQUUsY0FBYzBELE9BQU8sNEVBQThFZ0MsRUFBUyxzSUFFOUd4RixRQUFRQyxJQUFLLHNDQUF5Q0gsRUFBRSxxQkFBcUJPLEdBQUcsYUFFM0VQLEVBQUUscUJBQXFCTyxHQUFHLFlBQWMsQ0FDNUMsSUFBSW9GLEVBQWMzRixFQUFFLHFCQUFxQjRGLGNBRXpDNUYsRUFBRSwyQkFBMkI4RCxJQUFJLGFBQWM2QixFQUFjLEdBQUssYUFVcEUvRiIsImZpbGUiOiJteS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogbXkuanMgKi9cclxudmFyIG15ZG9jID0gKCB0eXBlb2YgKG15ZG9jKSA9PT0gJ29iamVjdCcgKSA/IG15ZG9jIDoge307XHJcbihteWRvYyA9IHtcclxuXHRpbml0IDogZnVuY3Rpb24gKCkge1xyXG5cdFx0bWFwYm94Z2wuYWNjZXNzVG9rZW4gPSAncGsuZXlKMUlqb2lkR2hoZEdKeVlXMGlMQ0poSWpvaVkycDBZek0xTlc5ek1ITTVNVE41Y0RSc2RuSm9PR3czYnlKOS5BN3VtWlZ0OVN4N05iOGpmTjZNMDNnJztcclxuXHRcdGxldCBteWRvY19pZF9xdWVyeVN0cl92YWwgPSAkLnVybFBhcmFtKCdteWRvY2lkJyk7XHJcblxyXG5cdFx0Y29uc29sZS5sb2coJ215ZG9jX2lkX3F1ZXJ5U3RyX3ZhbDogJyArIG15ZG9jX2lkX3F1ZXJ5U3RyX3ZhbCk7XHJcblxyXG5cdFx0aWYgKCBteWRvY19pZF9xdWVyeVN0cl92YWwgPT09IGZhbHNlICkge1xyXG5cdFx0XHRsZXQgbXlkb2NfbWFwID0gbXlkb2MubG9hZE1hcCgpO1xyXG5cclxuXHRcdFx0bXlkb2NfbWFwLm9uKCdsb2FkJywgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdCQoJyNteWRvY19tYXBfc3RhdHVzJykuaGlkZSgpO1xyXG5cclxuXHRcdFx0XHRpZiAoICQoJyNteWRvY19tYXAgLmFsZXJ0JykuaXMoJzp2aXNpYmxlJykgKSB7XHJcblx0XHRcdFx0XHQkKCcjbXlkb2NfbWFwIC5hbGVydCcpLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdCQoJyNteWRvY19pZF9zZWFyY2hfZmllbGQnKS52YWwobXlkb2NfaWRfcXVlcnlTdHJfdmFsKTtcclxuXHJcblx0XHRcdCQoJyNteWRvY19pZF9zZWFyY2hfZ28nKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpO1xyXG5cclxuXHRcdFx0bXlkb2MuZmluZE15RG9DKCd1cmwnKTtcclxuXHRcdH1cclxuXHJcblx0XHQkKCcjbXlkb2NfaWRfc2VhcmNoX2ZpZWxkJykub24oJ2lucHV0JywgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRsZXQgbXlkb2NfaWRfc2VhcmNoX3ZhbCA9ICQodGhpcykudmFsKCk7XHJcblx0XHRcdFx0bXlkb2NfaWRfc2VhcmNoX3ZhbCA9ICQudHJpbShteWRvY19pZF9zZWFyY2hfdmFsKTtcclxuXHJcblx0XHRcdGlmIChteWRvY19pZF9zZWFyY2hfdmFsLmxlbmd0aCA+IDQpIHtcclxuXHRcdFx0XHQkKCcjbXlkb2NfaWRfc2VhcmNoX2dvJykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XHJcblx0XHRcdFx0JCgnI215ZG9jX2lkX3NlYXJjaF9maWVsZCcpLm9mZigna2V5cHJlc3MnKTtcclxuXHRcdFx0XHQkKCcjbXlkb2NfaWRfc2VhcmNoX2ZpZWxkJykua2V5cHJlc3MoIGZ1bmN0aW9uIChlKSB7XHJcblx0XHRcdFx0XHRpZiAoZS53aGljaCA9PT0gMTMpIHtcclxuXHRcdFx0XHRcdFx0bXlkb2MuZmluZE15RG9DKCd1c2VyJyk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0JCgnI215ZG9jX2lkX3NlYXJjaF9nbycpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcblx0XHRcdFx0JCgnI215ZG9jX2lkX3NlYXJjaF9maWVsZCcpLm9mZigna2V5cHJlc3MnKTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblxyXG5cdFx0JCgnI215ZG9jX2lkX3NlYXJjaF9nbycpLmNsaWNrKCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdG15ZG9jLmZpbmRNeURvQygndXNlcicpO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cdCxcclxuXHRsb2FkTWFwIDogZnVuY3Rpb24gKHNldHRpbmdzKSB7XHJcblx0XHQkKCcjbXlkb2NfbWFwX3N0YXR1cycpLnNob3coKTtcclxuXHJcblx0XHR2YXIgY2VudGVyID0gWy0xMDUuNTQ3MjIyLCAzOV07XHJcblx0XHR2YXIgem9vbSA9IDYuNTtcclxuXHJcblx0XHRpZiAodHlwZW9mIHNldHRpbmdzICE9PSAndW5kZWZpbmVkJykge1xyXG5cdFx0XHQvKiogSWYgbm8gbWFwIGNlbnRlciBpcyBzcGVjaWZpZWQsIHNldCB0byBnZW9ncmFwaGljIGNlbnRlciBvZiBDb2xvcmFkbyAqL1xyXG5cdFx0XHRpZiAodHlwZW9mIHNldHRpbmdzLmNlbnRlciAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuXHRcdFx0XHRjZW50ZXIgPSBzZXR0aW5ncy5jZW50ZXI7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8qKiBJZiBubyBtYXAgem9vbSBsZXZlbCBpcyBzcGVjaWZpZWQsIHNldCB0byBhIGxldmVsIG1ha2luZyBDb2xvcmFkbyBpZGVudGlmaWFibGUgYWNyb3NzIHdpZGVzdCB2YXJpZXR5IG9mIHJlc29sdXRpb25zICovXHJcblx0XHRcdGlmICh0eXBlb2Ygc2V0dGluZ3Muem9vbSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuXHRcdFx0XHR6b29tID0gc2V0dGluZ3Muem9vbTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdGxldCBteWRvY19tYXAgPSBuZXcgbWFwYm94Z2wuTWFwKHtcclxuXHRcdFx0Y29udGFpbmVyOiAnbXlkb2NfbWFwJyxcclxuXHRcdFx0c3R5bGU6ICdtYXBib3g6Ly9zdHlsZXMvdGhhdGJyYW0vY2p0b2toMjY5MDJhZDFmbTQzeHFtNGt2MicsIC8vICdSYWRvIDJcclxuXHRcdFx0Y2VudGVyOiBjZW50ZXIsXHJcblx0XHRcdHpvb206IHpvb21cclxuXHRcdH0pO1xyXG5cclxuXHRcdHJldHVybiBteWRvY19tYXA7XHJcblx0fVxyXG5cdCxcclxuXHRmaW5kTXlEb0MgOiBmdW5jdGlvbiAoc291cmNlKSB7XHJcblx0XHQkKCcjbXlkb2NfbWFwIC5hbGVydCcpLmFsZXJ0KCdjbG9zZScpO1xyXG5cclxuXHRcdGxldCBteWRvY19pZF9zZWFyY2hfdmFsO1xyXG5cclxuXHRcdHN3aXRjaCAoc291cmNlKSB7XHJcblx0XHRcdGNhc2UgJ3VzZXInOlxyXG5cclxuXHRcdFx0XHRjb25zb2xlLmxvZygnc291cmNlOiB1c2VyJyk7XHJcblxyXG5cdFx0XHRcdHZhciBxU3RyX2lkeCA9IGxvY2F0aW9uLmhyZWYuaW5kZXhPZignPycpO1xyXG5cclxuXHRcdFx0XHRpZiAocVN0cl9pZHggIT09IC0xKSB7XHJcblx0XHRcdFx0XHRoaXN0b3J5LnB1c2hTdGF0ZSgnJywgZG9jdW1lbnQudGl0bGUsIHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRteWRvY19pZF9zZWFyY2hfdmFsID0gJCgnI215ZG9jX2lkX3NlYXJjaF9maWVsZCcpLnZhbCgpO1xyXG5cdFx0XHRcdG15ZG9jX2lkX3NlYXJjaF92YWwgPSAkLnRyaW0obXlkb2NfaWRfc2VhcmNoX3ZhbCk7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlICd1cmwnOlxyXG5cclxuXHRcdFx0XHRjb25zb2xlLmxvZygnc291cmNlOiB1cmwnKTtcclxuXHJcblx0XHRcdFx0bGV0IG15ZG9jX2lkX3F1ZXJ5U3RyX3ZhbCA9ICQudXJsUGFyYW0oJ215ZG9jaWQnKTtcclxuXHRcdFx0XHRteWRvY19pZF9zZWFyY2hfdmFsID0gbXlkb2NfaWRfcXVlcnlTdHJfdmFsO1xyXG5cdFx0fVxyXG5cclxuXHRcdG15ZG9jX2lkX3NlYXJjaF92YWwgPSBteWRvY19pZF9zZWFyY2hfdmFsLnRvTG93ZXJDYXNlKCk7XHJcblxyXG5cdFx0JC5hamF4KHtcclxuXHRcdFx0dXJsOiAnLy5uZXRsaWZ5L2Z1bmN0aW9ucy9teWRvY19hdD9teWRvY2lkPScgKyBteWRvY19pZF9zZWFyY2hfdmFsLFxyXG5cdFx0XHRkYXRhVHlwZTogJ2pzb24nXHJcblx0XHR9KS5kb25lKCBmdW5jdGlvbiAocmVzcCkge1xyXG5cclxuXHRcdFx0Y29uc29sZS5sb2coJ3Jlc3A6ICcpO1xyXG5cdFx0XHRjb25zb2xlLmxvZyhyZXNwKTtcclxuXHJcblx0XHRcdGlmIChyZXNwLmxlbmd0aCA+IDApIHtcclxuXHRcdFx0XHRsZXQgbXlkb2NfaWQgPSBteWRvY19pZF9zZWFyY2hfdmFsO1xyXG5cdFx0XHRcdHZhciBteWRvY19kYXRhID0gcmVzcFswXS5maWVsZHM7XHJcblxyXG5cdFx0XHRcdGNvbnNvbGUubG9nKG15ZG9jX2RhdGEpO1xyXG5cclxuXHRcdFx0XHQvKiogU2V0IGRpcmVjdGx5IGFjY2Vzc2libGUgVVJMICovXHJcblx0XHRcdFx0aGlzdG9yeS5wdXNoU3RhdGUoJycsIGRvY3VtZW50LnRpdGxlLCAnP215ZG9jaWQ9JyArIG15ZG9jX2lkKTtcclxuXHJcblx0XHRcdFx0aWYgKG15ZG9jX2RhdGEudmlkZW9zKSB7XHJcblx0XHRcdFx0XHR2YXIgdmlkZW9zQXJyID0gbXlkb2NfZGF0YS52aWRlb3M7XHJcblx0XHRcdFx0XHRcdHZpZGVvc0FyciA9IHZpZGVvc0Fyci5zcGxpdCgnLCcpO1xyXG5cclxuXHRcdFx0XHRcdCQuZWFjaCh2aWRlb3NBcnIsIGZ1bmN0aW9uIChpZHgsIGl0bSkge1xyXG5cdFx0XHRcdFx0XHRsZXQgdmlkU3ZjID0gaXRtLnN1YnN0cigwLCBpdG0uaW5kZXhPZignOicpKTtcclxuXHRcdFx0XHRcdFx0dmFyIHZpZElkID0gaXRtLnN1YnN0cihpdG0uaW5kZXhPZignOicpKzEsIGl0bS5sZW5ndGgpO1xyXG5cdFx0XHRcdFx0XHR2YXIgdmlkT2JqO1xyXG5cclxuXHRcdFx0XHRcdFx0c3dpdGNoICh2aWRTdmMpIHtcclxuXHRcdFx0XHRcdFx0XHRjYXNlICd2aW1lbyc6XHJcblx0XHRcdFx0XHRcdFx0XHR2aWRPYmogPSAnPGlmcmFtZSBzcmM9XCJodHRwczovL3BsYXllci52aW1lby5jb20vdmlkZW8vJyArIHZpZElkICsgJ1wiIGNsYXNzPVwidmlkZW9cIiBmcmFtZWJvcmRlcj1cIjBcIiBhbGxvdz1cImF1dG9wbGF5OyBmdWxsc2NyZWVuXCIgYWxsb3dmdWxsc2NyZWVuPjwvaWZyYW1lPic7XHJcblx0XHRcdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0XHRcdFx0Ly8gY2FzZSAneW91dHViZSc6XHJcblx0XHRcdFx0XHRcdFx0XHQvLyB2aWRPYmogPSAnJzsgLy8gJ2h0dHBzOi8veW91dHViZS5jb20vd2F0Y2g/dj0nICsgdmlkSWQ7XHJcblx0XHRcdFx0XHRcdFx0Ly8gYnJlYWs7XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdCQoJyNteWRvY19kZXRhaWxzX3ZpZGVvc19jb250YWluZXInKS5hcHBlbmQodmlkT2JqKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHQkKCcjbXlkb2NfZGV0YWlsc192aWRlb3NfY29udGFpbmVyJykuaHRtbCgnJyk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvKiogXHJcblx0XHRcdFx0ICogRm9yIGltYWdlIGRpc3BsYXkvY2Fyb3VzZWwsIHVzZSBuYW1pbmcgY29udmVudGlvbiwgZm9yIGV4YW1wbGU6XHJcblx0XHRcdFx0ICogLSBhbHBoYTAxLmpwZywgYWxwaGEwMi5qcGdcclxuXHRcdFx0XHQgKiBvclxyXG5cdFx0XHRcdCAqIC0gL2FscGhhLzAxLmpwZywgL2FscGhhLzAyLmpwZ1xyXG5cdFx0XHRcdCAqL1xyXG5cclxuXHRcdFx0XHRpZiAobXlkb2NfZGF0YS5waG90b3MpIHtcclxuXHRcdFx0XHRcdHZhciBwaG90b3NBcnIgPSBteWRvY19kYXRhLnBob3RvcztcclxuXHRcdFx0XHRcdFx0cGhvdG9zQXJyID0gcGhvdG9zQXJyLnNwbGl0KCcsJyk7XHJcblxyXG5cdFx0XHRcdFx0XHQkKCcjbXlkb2NfZGV0YWlsc19waG90b3NfY2Fyb3VzZWwnKS5jc3MoJ3Zpc2liaWxpdHknLCAndmlzaWJsZScpO1xyXG5cclxuXHRcdFx0XHRcdC8qJC5lYWNoKHBob3Rvc0FyciwgZnVuY3Rpb24gKGlkeCwgaXRtKSB7XHJcblx0XHRcdFx0XHRcdC8vXHJcblx0XHRcdFx0XHR9KTsqL1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHQkKCcjbXlkb2NfZGV0YWlsc19waG90b3NfY2Fyb3VzZWwnKS5jc3MoJ3Zpc2liaWxpdHknLCAnaGlkZGVuJyk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRpZiAobXlkb2NfZGF0YS5jb2xsZWN0aW9uX2RhdGUpIHtcclxuXHRcdFx0XHRcdHZhciBteWRvY19jb2xsRGF0ZSA9IG15ZG9jX2RhdGEuY29sbGVjdGlvbl9kYXRlO1xyXG5cclxuXHRcdFx0XHRcdC8vIERvIHRoZSBkYXRlIHN0dWZmXHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRpZiAobXlkb2NfZGF0YS5sYXRpdHVkZSkge1xyXG5cdFx0XHRcdFx0dmFyIG15ZG9jX2xhdCA9IG15ZG9jX2RhdGEubGF0aXR1ZGU7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRpZiAobXlkb2NfZGF0YS5sb25naXR1ZGUpIHtcclxuXHRcdFx0XHRcdHZhciBteWRvY19sb25nID0gbXlkb2NfZGF0YS5sb25naXR1ZGU7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRpZiAoIW15ZG9jX2RhdGEubGF0aXR1ZGUgfHwgIW15ZG9jX2RhdGEubG9uZ2l0dWRlKSB7XHJcblx0XHRcdFx0XHRtYXBwaW5nRXJyKCdtaXNzaW5nQ29vcnMnKTtcclxuXHJcblx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdFxyXG5cdFx0XHRcdGxldCBteWRvY19sb2NfbWIgPSBbbXlkb2NfbG9uZywgbXlkb2NfbGF0XTtcclxuXHJcblx0XHRcdFx0bGV0IHNldHRpbmdzID0ge1xyXG5cdFx0XHRcdFx0Y2VudGVyOiBteWRvY19sb2NfbWIsXHJcblx0XHRcdFx0XHR6b29tOiAxNVxyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHRcdGxldCBteWRvY19tYXAgPSBteWRvYy5sb2FkTWFwKHNldHRpbmdzKTtcclxuXHJcblx0XHRcdFx0bXlkb2NfbWFwLm9uKCdsb2FkJywgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0JCgnI215ZG9jX21hcF9zdGF0dXMnKS5oaWRlKCk7XHJcblxyXG5cdFx0XHRcdFx0aWYgKCAkKCcjbXlkb2NfbWFwIC5hbGVydCcpLmlzKCc6dmlzaWJsZScpICkge1xyXG5cdFx0XHRcdFx0XHQkKCcjbXlkb2NfbWFwIC5hbGVydCcpLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0bGV0IG15ZG9jX21hcmtlciA9IG5ldyBtYXBib3hnbC5NYXJrZXIoKS5zZXRMbmdMYXQobXlkb2NfbG9jX21iKS5hZGRUbyhteWRvY19tYXApO1xyXG5cclxuXHRcdFx0XHRcdHZhciBtYXJrZXJIZWlnaHQgPSAzOCxcclxuXHRcdFx0XHRcdFx0bWFya2VyUmFkaXVzID0gOCxcclxuXHRcdFx0XHRcdFx0bGluZWFyT2Zmc2V0ID0gMTA7XHJcblxyXG5cdFx0XHRcdFx0dmFyIHBvcHVwT2Zmc2V0cyA9IHtcclxuXHRcdFx0XHRcdFx0J3RvcCc6IFswLCAwXSxcclxuXHRcdFx0XHRcdFx0J3RvcC1sZWZ0JzogWzAsMF0sXHJcblx0XHRcdFx0XHRcdCd0b3AtcmlnaHQnOiBbMCwwXSxcclxuXHRcdFx0XHRcdFx0J2JvdHRvbSc6IFswLCAtbWFya2VySGVpZ2h0XSxcclxuXHRcdFx0XHRcdFx0J2JvdHRvbS1sZWZ0JzogW2xpbmVhck9mZnNldCwgKG1hcmtlckhlaWdodCAtIG1hcmtlclJhZGl1cyArIGxpbmVhck9mZnNldCkgKiAtMV0sXHJcblx0XHRcdFx0XHRcdCdib3R0b20tcmlnaHQnOiBbLWxpbmVhck9mZnNldCwgKG1hcmtlckhlaWdodCAtIG1hcmtlclJhZGl1cyArIGxpbmVhck9mZnNldCkgKiAtMV0sXHJcblx0XHRcdFx0XHRcdCdsZWZ0JzogW21hcmtlclJhZGl1cywgKG1hcmtlckhlaWdodCAtIG1hcmtlclJhZGl1cykgKiAtMV0sXHJcblx0XHRcdFx0XHRcdCdyaWdodCc6IFstbWFya2VyUmFkaXVzLCAobWFya2VySGVpZ2h0IC0gbWFya2VyUmFkaXVzKSAqIC0xXVxyXG5cdFx0XHRcdFx0fTtcclxuXHJcblx0XHRcdFx0XHRsZXQgbXlkb2NfbG9jX3N0ciA9IG15ZG9jX2xhdCArICcsICcgKyBteWRvY19sb25nO1xyXG5cclxuXHRcdFx0XHRcdG15ZG9jX21hcF9wb3B1cF90ZW1wbGF0ZSA9ICc8c3BhbiBjbGFzcz1cIm15ZG9jX2lkXCI+JyArIG15ZG9jX2lkICsgJzwvc3Bhbj4nXHJcblx0XHRcdFx0XHRcdCsgJzxicj4nXHJcblx0XHRcdFx0XHRcdCsgbXlkb2NfbG9jX3N0clxyXG5cdFx0XHRcdFx0XHQvLyArICc8YnI+J1xyXG5cdFx0XHRcdFx0XHQvLyArICc8YSBocmVmPVwiI215ZG9jX2RldGFpbHNcIj5EZXRhaWxzPC9hPidcclxuXHRcdFx0XHRcdDtcclxuXHJcblx0XHRcdFx0XHRteWRvY19tYXBfcG9wdXAgPSBuZXcgbWFwYm94Z2wuUG9wdXAoe29mZnNldDogcG9wdXBPZmZzZXRzLCBjbGFzc05hbWU6ICdteWRvYy1tYXAtcG9wdXAnfSlcclxuXHRcdFx0XHRcdFx0LnNldExuZ0xhdChbbXlkb2NfbG9uZywgbXlkb2NfbGF0XSlcclxuXHRcdFx0XHRcdFx0LnNldEhUTUwobXlkb2NfbWFwX3BvcHVwX3RlbXBsYXRlKVxyXG5cdFx0XHRcdFx0XHQuYWRkVG8obXlkb2NfbWFwKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRtYXBwaW5nRXJyKCdpbnZhbGlkTXlkb2MnKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0ZnVuY3Rpb24gbWFwcGluZ0VyciAoY29uZGl0aW9uKSB7XHJcblx0XHRcdFx0dmFyIGVyck1zZztcclxuXHJcblx0XHRcdFx0c3dpdGNoIChjb25kaXRpb24pIHtcclxuXHRcdFx0XHRcdGNhc2UgJ2ludmFsaWRNeWRvYyc6XHJcblx0XHRcdFx0XHRcdGVyck1zZyA9ICc8c3Ryb25nPkRvQyBpZCBub3QgZm91bmQuPC9zdHJvbmc+IFBsZWFzZSB0cnkgYWdhaW4uJztcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdFx0Y2FzZSAnbWlzc2luZ0Nvb3JzJzpcclxuXHRcdFx0XHRcdFx0ZXJyTXNnID0gJzxzdHJvbmc+Q2FuXFwndCBtYXAgdGhpcyBEb3NlIElELjwvc3Ryb25nPiBTZWVtcyB0byBiZSBmcm9tIGxhY2sgb2YgY29vcmRpbmF0ZXMuIFNvcnJ5IGFib3V0IHRoYXQuLi4gPS8nO1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0XHRkZWZhdWx0OlxyXG5cdFx0XHRcdFx0XHRlcnJNc2cgPSAnPHN0cm9uZz5DYW5cXCd0IG1hcCB0aGlzIERvc2UgSUQuPC9zdHJvbmc+IExvb2tzIGxpa2UgdGhhdFxcJ3MgYWxsIHRoZSBpbmZvIHRoZXJlIGlzLiBTb3JyeSBhYm91dCB0aGF0Li4uID0vJztcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRsZXQgbXlkb2NfbWFwID0gbXlkb2MubG9hZE1hcCgpO1xyXG5cclxuXHRcdFx0XHRteWRvY19tYXAub24oJ2xvYWQnLCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coJ2ZpbmRNeURvQyBteWRvY19tYXAub24obG9hZCkgLSBpbnZhbGlkIGlkJyk7XHJcblxyXG5cdFx0XHRcdFx0JCgnI215ZG9jX21hcF9zdGF0dXMnKS5oaWRlKCk7XHJcblxyXG5cdFx0XHRcdFx0aWYgKCAkKCcjbXlkb2NfbWFwIC5hbGVydCcpLmlzKCc6dmlzaWJsZScpICkge1xyXG5cdFx0XHRcdFx0XHQkKCcjbXlkb2NfbWFwIC5hbGVydCcpLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdCQoJyNteWRvY19tYXAnKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXIgYWxlcnQtZGlzbWlzc2libGUgZmFkZSBzaG93XCIgcm9sZT1cImFsZXJ0XCI+JyArIGVyck1zZyArICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImNsb3NlXCIgZGF0YS1kaXNtaXNzPVwiYWxlcnRcIiBhcmlhLWxhYmVsPVwiQ2xvc2VcIj48c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj4mdGltZXM7PC9zcGFuPjwvYnV0dG9uPjwvZGl2PicpO1xyXG5cclxuXHRcdFx0XHRjb25zb2xlLmxvZyggJyQoI215ZG9jX21hcF9zdGF0dXMpLmlzKDp2aXNpYmxlKTogJyArICAkKCcjbXlkb2NfbWFwX3N0YXR1cycpLmlzKCc6dmlzaWJsZScpICk7XHJcblxyXG5cdFx0XHRcdGlmICggJCgnI215ZG9jX21hcF9zdGF0dXMnKS5pcygnOnZpc2libGUnKSApIHtcclxuXHRcdFx0XHRcdGxldCBtYXBTdGF0dXNfaCA9ICQoJyNteWRvY19tYXBfc3RhdHVzJykub3V0ZXJIZWlnaHQoKTtcclxuXHJcblx0XHRcdFx0XHQkKCcjbXlkb2NfbWFwIC5hbGVydDpmaXJzdCcpLmNzcygnbWFyZ2luLXRvcCcsIG1hcFN0YXR1c19oICsgMTYgKyAncHgnKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8qKiBBdXRvY2xvc2UgdGhlIGFsZXJ0cyAqL1xyXG5cdFx0XHRcdC8qd2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uICgpIHtcclxuXHRcdCAgICAgICAgICAgICQoJyNteWRvY19tYXAgLmFsZXJ0JykuYWxlcnQoJ2Nsb3NlJyk7XHJcblx0XHQgICAgICAgIH0sIDQwMDApOyovXHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdH1cclxufSkuaW5pdCgpO1xyXG4iXX0=
