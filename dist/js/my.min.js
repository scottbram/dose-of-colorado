var o="object"==typeof o?o:{};(o={init:function(){mapboxgl.accessToken="pk.eyJ1IjoidGhhdGJyYW0iLCJhIjoiY2p0YzM1NW9zMHM5MTN5cDRsdnJoOGw3byJ9.A7umZVt9Sx7Nb8jfN6M03g";let e=$.urlParam("mydocid");if(console.log("mydoc_id_queryStr_val: "+e),!1===e){o.loadMap().on("load",function(){$("#mydoc_map_status").hide(),$("#mydoc_map .alert").is(":visible")&&$("#mydoc_map .alert").removeAttr("style")})}else $("#mydoc_id_search_field").val(e),$("#mydoc_id_search_go").prop("disabled",!0),o.findMyDoC("url");$("#mydoc_id_search_field").on("input",function(){let o=$(this).val();(o=$.trim(o)).length>4?$("#mydoc_id_search_go").prop("disabled",!1):$("#mydoc_id_search_go").prop("disabled",!0)}),$("#mydoc_id_search_field").keypress(function(e){13===e.which&&o.findMyDoC("user")}),$("#mydoc_id_search_go").click(function(){o.findMyDoC("user")})},loadMap:function(o){$("#mydoc_map_status").show();var e=[-105.547222,39],a=6.5;return void 0!==o&&(void 0!==o.center&&(e=o.center),void 0!==o.zoom&&(a=o.zoom)),new mapboxgl.Map({container:"mydoc_map",style:"mapbox://styles/thatbram/cjtokh26902ad1fm43xqm4kv2",center:e,zoom:a})},findMyDoC:function(e){let a;switch(console.log("findMyDoC..."),$("#mydoc_map .alert").alert("close"),e){case"user":console.log("...source: user");var t=location.href.indexOf("?");console.log("qStr_idx: "+t),-1!==t&&history.pushState("",document.title,window.location.pathname),a=$("#mydoc_id_search_field").val(),a=$.trim(a);break;case"url":console.log("...source: url"),a=$.urlParam("mydocid")}a=a.toLowerCase(),console.log("mydoc_id_search_val: "+a);let d=!1,s=40.13,i=-105.514;if("alpha"===a&&(d=!0),d){let e=a;history.pushState("",document.title,"?mydocid="+e);let t=s,d=i,l=[d,t],m={center:l,zoom:15},c=o.loadMap(m);c.on("load",function(){console.log("findMyDoC mydoc_map.on(load)"),$("#mydoc_map_status").hide(),$("#mydoc_map .alert").is(":visible")&&$("#mydoc_map .alert").removeAttr("style");(new mapboxgl.Marker).setLngLat(l).addTo(c);var o={top:[0,0],"top-left":[0,0],"top-right":[0,0],bottom:[0,-38],"bottom-left":[10,-40],"bottom-right":[-10,-40],left:[8,-30],right:[-8,-30]};mydoc_map_popup_template='<span class="mydoc_id">'+e+"</span><br>"+(t+", "+d)+'<br><a href="#mydoc_details">Details</a>',mydoc_map_popup=new mapboxgl.Popup({offset:o,className:"mydoc-map-popup"}).setLngLat([d,t]).setHTML(mydoc_map_popup_template).addTo(c)})}else{if(o.loadMap().on("load",function(){console.log("findMyDoC mydoc_map.on(load) - invalid id"),$("#mydoc_map_status").hide(),$("#mydoc_map .alert").is(":visible")&&$("#mydoc_map .alert").removeAttr("style")}),$("#mydoc_map").append('<div class="alert alert-danger alert-dismissible fade show" role="alert"><strong>DoC id not found.</strong> Please try again.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>'),console.log("$(#mydoc_map_status).is(:visible): "+$("#mydoc_map_status").is(":visible")),$("#mydoc_map_status").is(":visible")){let o=$("#mydoc_map_status").outerHeight();$("#mydoc_map .alert:first").css("margin-top",o+16+"px")}}}}).init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
