var mydoc_map;function loadMap(){mydoc_map=new mapboxgl.Map({container:"mydoc_map",style:"mapbox://styles/thatbram/cjtiahjbp0nug1fm8qcymkp8v",zoom:6,center:[-105.547222,39]})}mapboxgl.accessToken="pk.eyJ1IjoidGhhdGJyYW0iLCJhIjoiY2p0YzM1NW9zMHM5MTN5cDRsdnJoOGw3byJ9.A7umZVt9Sx7Nb8jfN6M03g",mydoc_map=new mapboxgl.Map({container:"mydoc_map",style:"mapbox://styles/thatbram/cjtiahjbp0nug1fm8qcymkp8v",zoom:6,center:[-105.547222,39]});var mydoc_marker,mydoc_map_popup,mydoc_id=0;function findMyDoC(){if(loadMap(),console.log("mydoc_id: "+mydoc_id),"alpha"===mydoc_id.toLowerCase()){mydoc_map.setCenter([-105.514,40.13]),mydoc_map.setZoom(15),mydoc_marker=(new mapboxgl.Marker).setLngLat([-105.514,40.13]).addTo(mydoc_map);var o={top:[0,0],"top-left":[0,0],"top-right":[0,0],bottom:[0,-38],"bottom-left":[10,-40],"bottom-right":[-10,-40],left:[8,-30],right:[-8,-30]};mydoc_map_popup=new mapboxgl.Popup({offset:o,className:"mydoc-map-popup"}).setLngLat([-105.514,40.13]).setHTML("DoC id: alpha").addTo(mydoc_map)}else $("#mydoc_map").append('<div class="alert alert-warning alert-dismissible fade show" role="alert"><strong>DoC id not found.</strong> Please try again.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>'),window.setTimeout(function(){$("#mydoc_map .alert").alert("close")},4e3)}$("#mydoc_id_search_field").on("input",function(){(mydoc_id=$(this).val()).length>4?$("#mydoc_id_search_go").prop("disabled",!1):$("#mydoc_id_search_go").prop("disabled",!0)}),$("#mydoc_id_search_field").keypress(function(o){13===o.which&&findMyDoC()}),$("#mydoc_id_search_go").click(function(){findMyDoC()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm15LmpzIl0sIm5hbWVzIjpbIm15ZG9jX21hcCIsImxvYWRNYXAiLCJtYXBib3hnbCIsIk1hcCIsImNvbnRhaW5lciIsInN0eWxlIiwiem9vbSIsImNlbnRlciIsImFjY2Vzc1Rva2VuIiwibXlkb2NfbWFya2VyIiwibXlkb2NfbWFwX3BvcHVwIiwibXlkb2NfaWQiLCJmaW5kTXlEb0MiLCJjb25zb2xlIiwibG9nIiwidG9Mb3dlckNhc2UiLCJzZXRDZW50ZXIiLCJzZXRab29tIiwiTWFya2VyIiwic2V0TG5nTGF0IiwiYWRkVG8iLCJwb3B1cE9mZnNldHMiLCJ0b3AiLCJ0b3AtbGVmdCIsInRvcC1yaWdodCIsImJvdHRvbSIsImJvdHRvbS1sZWZ0IiwiYm90dG9tLXJpZ2h0IiwibGVmdCIsInJpZ2h0IiwiUG9wdXAiLCJvZmZzZXQiLCJjbGFzc05hbWUiLCJzZXRIVE1MIiwiJCIsImFwcGVuZCIsIndpbmRvdyIsInNldFRpbWVvdXQiLCJhbGVydCIsIm9uIiwidGhpcyIsInZhbCIsImxlbmd0aCIsInByb3AiLCJrZXlwcmVzcyIsImUiLCJ3aGljaCIsImNsaWNrIl0sIm1hcHBpbmdzIjoiQUFJQSxJQUFBQSxVQThCQSxTQUFBQyxVQUNBRCxVQUFBLElBQUFFLFNBQUFDLElBQUEsQ0FDQUMsVUFBQSxZQUNBQyxNQUFBLHFEQUNBQyxLQUFBLEVBQ0FDLE9BQUEsRUFBQSxXQUFBLE1BckNBTCxTQUFBTSxZQUFBLDZGQXlCQVIsVUFBQSxJQUFBRSxTQUFBQyxJQUFBLENBQ0FDLFVBQUEsWUFDQUMsTUFBQSxxREFDQUMsS0FBQSxFQUNBQyxPQUFBLEVBQUEsV0FBQSxNQVlBLElBQ0FFLGFBQ0FDLGdCQUZBQyxTQUFBLEVBY0EsU0FBQUMsWUFLQSxHQUpBWCxVQUVBWSxRQUFBQyxJQUFBLGFBQUFILFVBRUEsVUFBQUEsU0FBQUksY0FBQSxDQUNBZixVQUFBZ0IsVUFBQSxFQUFBLFFBQUEsUUFDQWhCLFVBQUFpQixRQUFBLElBRUFSLGNBQUEsSUFBQVAsU0FBQWdCLFFBQUFDLFVBQUEsRUFBQSxRQUFBLFFBQUFDLE1BQUFwQixXQUVBLElBRUFxQixFQUFBLENBQ0FDLElBQUEsQ0FBQSxFQUFBLEdBQ0FDLFdBQUEsQ0FBQSxFQUFBLEdBQ0FDLFlBQUEsQ0FBQSxFQUFBLEdBQ0FDLE9BQUEsQ0FBQSxHQU5BLElBT0FDLGNBQUEsQ0FQQSxJQU9BLElBQ0FDLGVBQUEsRUFSQSxJQVFBLElBQ0FDLEtBQUEsQ0FUQSxHQVNBLElBQ0FDLE1BQUEsRUFWQSxHQVVBLEtBR0FuQixnQkFBQSxJQUFBUixTQUFBNEIsTUFBQSxDQUFBQyxPQUFBVixFQUFBVyxVQUFBLG9CQUNBYixVQUFBLEVBQUEsUUFBQSxRQUNBYyxRQUFBLGlCQUNBYixNQUFBcEIsZ0JBRUFrQyxFQUFBLGNBQUFDLE9BQUEsb1FBRUFDLE9BQUFDLFdBQUEsV0FDQUgsRUFBQSxxQkFBQUksTUFBQSxVQUNBLEtBM0NBSixFQUFBLDBCQUFBSyxHQUFBLFFBQUEsWUFDQTVCLFNBQUF1QixFQUFBTSxNQUFBQyxPQUVBQyxPQUFBLEVBQ0FSLEVBQUEsdUJBQUFTLEtBQUEsWUFBQSxHQUVBVCxFQUFBLHVCQUFBUyxLQUFBLFlBQUEsS0F5Q0FULEVBQUEsMEJBQUFVLFNBQUEsU0FBQUMsR0FDQSxLQUFBQSxFQUFBQyxPQUNBbEMsY0FJQXNCLEVBQUEsdUJBQUFhLE1BQUEsV0FDQW5DIiwiZmlsZSI6InN0ZXcubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIG15LmpzICovXG5cbm1hcGJveGdsLmFjY2Vzc1Rva2VuID0gJ3BrLmV5SjFJam9pZEdoaGRHSnlZVzBpTENKaElqb2lZMnAwWXpNMU5XOXpNSE01TVRONWNEUnNkbkpvT0d3M2J5SjkuQTd1bVpWdDlTeDdOYjhqZk42TTAzZyc7XG5cbnZhciBteWRvY19tYXA7XG5cbi8qbXlkb2NfbWFwID0gbmV3IG1hcGJveGdsLk1hcCh7XG5cdGNvbnRhaW5lcjogJ215ZG9jX21hcCcsXG5cdC8vIHN0eWxlOiAnbWFwYm94Oi8vc3R5bGVzL21hcGJveC9jamF1ZGdsODQwZ24zMnJucmVwY2I5YjlnJyxcblx0Ly8gc3R5bGU6ICdtYXBib3g6Ly9zdHlsZXMvbWFwYm94L291dGRvb3JzLXY5Jyxcblx0em9vbTogNixcblx0Y2VudGVyOiBbLTEwNS41NDcyMjIsIDM5XSAvLyBHZW9ncmFwaGljIGNlbnRlciBvZiBDb2xvcmFkb1xufSk7XG5cbm15ZG9jX21hcC5vbignbG9hZCcsIGZ1bmN0aW9uICgpIHtcblx0bXlkb2NfbWFwLmFkZFNvdXJjZSgnZGVtJywge1xuXHRcdFwidHlwZVwiOiBcInJhc3Rlci1kZW1cIixcblx0XHRcInVybFwiOiBcIm1hcGJveDovL21hcGJveC50ZXJyYWluLXJnYlwiXG5cdH0pO1xuXG5cdG15ZG9jX21hcC5hZGRMYXllcih7XG5cdFx0XCJpZFwiOiBcImhpbGxzaGFkaW5nXCIsXG5cdFx0XCJzb3VyY2VcIjogXCJkZW1cIixcblx0XHRcInR5cGVcIjogXCJoaWxsc2hhZGVcIlxuXHR9LCAnd2F0ZXJ3YXktcml2ZXItY2FuYWwtc2hhZG93Jyk7XG59KTsqL1xuXG5teWRvY19tYXAgPSBuZXcgbWFwYm94Z2wuTWFwKHtcblx0Y29udGFpbmVyOiAnbXlkb2NfbWFwJyxcblx0c3R5bGU6ICdtYXBib3g6Ly9zdHlsZXMvdGhhdGJyYW0vY2p0aWFoamJwMG51ZzFmbThxY3lta3A4dicsXG5cdHpvb206IDYsXG5cdGNlbnRlcjogWy0xMDUuNTQ3MjIyLCAzOV0gLy8gR2VvZ3JhcGhpYyBjZW50ZXIgb2YgQ29sb3JhZG9cbn0pO1xuXG5mdW5jdGlvbiBsb2FkTWFwICgpIHtcblx0bXlkb2NfbWFwID0gbmV3IG1hcGJveGdsLk1hcCh7XG5cdFx0Y29udGFpbmVyOiAnbXlkb2NfbWFwJyxcblx0XHRzdHlsZTogJ21hcGJveDovL3N0eWxlcy90aGF0YnJhbS9janRpYWhqYnAwbnVnMWZtOHFjeW1rcDh2Jyxcblx0XHR6b29tOiA2LFxuXHRcdGNlbnRlcjogWy0xMDUuNTQ3MjIyLCAzOV0gLy8gR2VvZ3JhcGhpYyBjZW50ZXIgb2YgQ29sb3JhZG9cblx0fSk7XG59XG5cbnZhciBteWRvY19pZCA9IDAsXG5cdG15ZG9jX21hcmtlcixcblx0bXlkb2NfbWFwX3BvcHVwO1xuXG4kKCcjbXlkb2NfaWRfc2VhcmNoX2ZpZWxkJykub24oJ2lucHV0JywgZnVuY3Rpb24gKCkge1xuXHRteWRvY19pZCA9ICQodGhpcykudmFsKCk7XG5cblx0aWYgKG15ZG9jX2lkLmxlbmd0aCA+IDQpIHtcblx0XHQkKCcjbXlkb2NfaWRfc2VhcmNoX2dvJykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XG5cdH0gZWxzZSB7XG5cdFx0JCgnI215ZG9jX2lkX3NlYXJjaF9nbycpLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XG5cdH1cbn0pO1xuXG5mdW5jdGlvbiBmaW5kTXlEb0MgKCkge1xuXHRsb2FkTWFwKCk7XG5cblx0Y29uc29sZS5sb2coJ215ZG9jX2lkOiAnICsgbXlkb2NfaWQpO1xuXG5cdGlmIChteWRvY19pZC50b0xvd2VyQ2FzZSgpID09PSAnYWxwaGEnKSB7XG5cdFx0bXlkb2NfbWFwLnNldENlbnRlcihbLTEwNS41MTQsIDQwLjEzMF0pO1xuXHRcdG15ZG9jX21hcC5zZXRab29tKDE1KTtcblxuXHRcdG15ZG9jX21hcmtlciA9IG5ldyBtYXBib3hnbC5NYXJrZXIoKS5zZXRMbmdMYXQoWy0xMDUuNTE0LCA0MC4xMzBdKS5hZGRUbyhteWRvY19tYXApO1xuXG5cdFx0dmFyIG1hcmtlckhlaWdodCA9IDM4LCBtYXJrZXJSYWRpdXMgPSA4LCBsaW5lYXJPZmZzZXQgPSAxMDtcblxuXHRcdHZhciBwb3B1cE9mZnNldHMgPSB7XG5cdFx0XHQndG9wJzogWzAsIDBdLFxuXHRcdFx0J3RvcC1sZWZ0JzogWzAsMF0sXG5cdFx0XHQndG9wLXJpZ2h0JzogWzAsMF0sXG5cdFx0XHQnYm90dG9tJzogWzAsIC1tYXJrZXJIZWlnaHRdLFxuXHRcdFx0J2JvdHRvbS1sZWZ0JzogW2xpbmVhck9mZnNldCwgKG1hcmtlckhlaWdodCAtIG1hcmtlclJhZGl1cyArIGxpbmVhck9mZnNldCkgKiAtMV0sXG5cdFx0XHQnYm90dG9tLXJpZ2h0JzogWy1saW5lYXJPZmZzZXQsIChtYXJrZXJIZWlnaHQgLSBtYXJrZXJSYWRpdXMgKyBsaW5lYXJPZmZzZXQpICogLTFdLFxuXHRcdFx0J2xlZnQnOiBbbWFya2VyUmFkaXVzLCAobWFya2VySGVpZ2h0IC0gbWFya2VyUmFkaXVzKSAqIC0xXSxcblx0XHRcdCdyaWdodCc6IFstbWFya2VyUmFkaXVzLCAobWFya2VySGVpZ2h0IC0gbWFya2VyUmFkaXVzKSAqIC0xXVxuXHRcdH07XG5cblx0XHRteWRvY19tYXBfcG9wdXAgPSBuZXcgbWFwYm94Z2wuUG9wdXAoe29mZnNldDogcG9wdXBPZmZzZXRzLCBjbGFzc05hbWU6ICdteWRvYy1tYXAtcG9wdXAnfSlcblx0XHRcdC5zZXRMbmdMYXQoWy0xMDUuNTE0LCA0MC4xMzBdKVxuXHRcdFx0LnNldEhUTUwoJ0RvQyBpZDogYWxwaGEnKVxuXHRcdFx0LmFkZFRvKG15ZG9jX21hcCk7XG5cdH0gZWxzZSB7XG5cdFx0JCgnI215ZG9jX21hcCcpLmFwcGVuZCgnPGRpdiBjbGFzcz1cImFsZXJ0IGFsZXJ0LXdhcm5pbmcgYWxlcnQtZGlzbWlzc2libGUgZmFkZSBzaG93XCIgcm9sZT1cImFsZXJ0XCI+PHN0cm9uZz5Eb0MgaWQgbm90IGZvdW5kLjwvc3Ryb25nPiBQbGVhc2UgdHJ5IGFnYWluLjxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiY2xvc2VcIiBkYXRhLWRpc21pc3M9XCJhbGVydFwiIGFyaWEtbGFiZWw9XCJDbG9zZVwiPjxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPiZ0aW1lczs8L3NwYW4+PC9idXR0b24+PC9kaXY+Jyk7XG5cblx0XHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJCgnI215ZG9jX21hcCAuYWxlcnQnKS5hbGVydCgnY2xvc2UnKTtcbiAgICAgICAgfSwgNDAwMCk7XG5cdH1cbn1cblxuJCgnI215ZG9jX2lkX3NlYXJjaF9maWVsZCcpLmtleXByZXNzKCBmdW5jdGlvbiAoZSkge1xuXHRpZiAoZS53aGljaCA9PT0gMTMpIHtcdFx0XG5cdFx0ZmluZE15RG9DKCk7XG5cdH1cbn0pO1xuXG4kKCcjbXlkb2NfaWRfc2VhcmNoX2dvJykuY2xpY2soIGZ1bmN0aW9uICgpIHtcblx0ZmluZE15RG9DKCk7XG59KTsgXG4iXX0=
